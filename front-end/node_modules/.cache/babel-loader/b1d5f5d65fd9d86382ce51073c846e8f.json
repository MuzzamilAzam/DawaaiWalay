{"ast":null,"code":"import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL } from \"../constants/productConstants\";\nimport { PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL } from \"../constants/productConstants\";\nimport axios from 'axios';\nimport Axios from \"axios\";\n\nconst listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n\n    if (!product._id) {\n      const {\n        data\n      } = await Axios.post('/api/products', product, {\n        headers: {\n          'Authorization': 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    } else {\n      const {\n        data\n      } = await Axios.put('/api/products/' + product._id, product, {\n        headers: {\n          'Authorization': 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products/\" + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst deleteProduct = productId => async (dispatch, getState) => {\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.delete('/api/products/' + productId, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n      payload: data,\n      success: true\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, detailsProduct, saveProduct, deleteProduct };","map":{"version":3,"sources":["D:/tp link double antena/Compressed/Dawaai/front-end/src/actions/productActions.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_SAVE_SUCCESS","PRODUCT_SAVE_FAIL","PRODUCT_SAVE_REQUEST","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","axios","Axios","listProducts","dispatch","type","data","get","payload","error","message","saveProduct","product","getState","userSignin","userInfo","_id","post","headers","token","put","detailsProduct","productId","deleteProduct","delete","Authorization","success"],"mappings":"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","sourcesContent":["import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL } from \"../constants/productConstants\"\r\nimport { PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL } from \"../constants/productConstants\"\r\nimport axios from 'axios';\r\nimport Axios from \"axios\";\r\n\r\nconst listProducts = () => async (dispatch) => {\r\n    try{\r\n        \r\n    dispatch({type: PRODUCT_LIST_REQUEST});\r\n    const {data} = await axios.get(\"/api/products\");\r\n    dispatch({type: PRODUCT_LIST_SUCCESS, payload: data});\r\n    }\r\n    catch(error){\r\n        dispatch({type: PRODUCT_LIST_FAIL, payload: error.message});\r\n    }\r\n}\r\n\r\n\r\nconst saveProduct = (product) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({type: PRODUCT_SAVE_REQUEST, payload: product});\r\n        const {userSignin: {userInfo}} = getState();\r\n        if(!product._id){\r\n            const {data} = await Axios.post('/api/products', product, {\r\n                headers: {\r\n                'Authorization': 'Bearer ' + userInfo.token\r\n            }\r\n        });\r\n        \r\n    dispatch({type: PRODUCT_SAVE_SUCCESS, payload: data});\r\n        }\r\n        else{\r\n            const {data} = await Axios.put('/api/products/' + product._id, product, {\r\n                headers: {\r\n                'Authorization': 'Bearer ' + userInfo.token\r\n            }\r\n        });\r\n        dispatch({type: PRODUCT_SAVE_SUCCESS, payload: data});\r\n        }\r\n    }\r\n    catch(error){\r\n        dispatch({type: PRODUCT_SAVE_FAIL, payload: error.message});\r\n    }\r\n}\r\n\r\n\r\nconst detailsProduct = (productId) => async (dispatch) =>{\r\n    try {\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST, payload: productId});\r\n        const {data} = await axios.get(\"/api/products/\"+ productId);\r\n        dispatch({type: PRODUCT_DETAILS_SUCCESS, payload: data});\r\n    }\r\n    catch (error){\r\n        dispatch({type: PRODUCT_DETAILS_FAIL, payload: error.message})\r\n    }\r\n}\r\n\r\n  const deleteProduct = (productId) => async (dispatch, getState) => {\r\n    try {\r\n      const {userSignin: { userInfo }} = getState();\r\n      dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\r\n      const { data } = await axios.delete('/api/products/' + productId, {\r\n        headers: {\r\n          Authorization: 'Bearer ' + userInfo.token,\r\n        },\r\n      });\r\n      dispatch({ type: PRODUCT_DELETE_SUCCESS, payload: data, success: true });\r\n    } catch (error) {\r\n      dispatch({ type: PRODUCT_DELETE_FAIL, payload: error.message });\r\n    }\r\n  };\r\n\r\nexport {listProducts, detailsProduct, saveProduct, deleteProduct}"]},"metadata":{},"sourceType":"module"}