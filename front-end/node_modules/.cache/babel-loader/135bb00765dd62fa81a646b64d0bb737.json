{"ast":null,"code":"import Axios from \"axios\";\nimport Cookie from 'js-cookie';\nimport { USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_SUCCESS, USER_REGISTER_REQUEST, USER_LOGOUT, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL } from \"../constants/userConstants\";\n\nconst signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/signin\", {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst register = (name, email, password) => async dispatch => {\n  // console.log(\"here\");\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      name,\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/register\", {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst logout = () => dispatch => {\n  Cookie.remove(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\n\nconst update = ({\n  userId,\n  name,\n  email,\n  password\n}) => async (dispatch, getState) => {\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState(); // alert('Bearer ' + userInfo.token); \n\n  dispatch({\n    type: USER_UPDATE_REQUEST,\n    payload: {\n      userId,\n      name,\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.put(\"/api/users/\" + userId, {\n      name,\n      email,\n      password\n    }, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n    window.location.reload();\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: error.message\n    });\n    window.location.reload();\n  }\n};\n\nexport { signin, register, logout, update }; //, logout, update}","map":{"version":3,"sources":["C:/Users/Muzamil/Desktop/DawaaiWalay/front-end/src/actions/userActions.js"],"names":["Axios","Cookie","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_SUCCESS","USER_REGISTER_REQUEST","USER_LOGOUT","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","signin","email","password","dispatch","type","payload","data","post","set","JSON","stringify","error","message","register","name","logout","remove","update","userId","getState","userSignin","userInfo","put","headers","Authorization","token","window","location","reload"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\r\nimport Cookie from 'js-cookie';\r\nimport { USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_SUCCESS, USER_REGISTER_REQUEST, USER_LOGOUT, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL } from \"../constants/userConstants\";\r\n\r\nconst signin = (email, password) => async (dispatch) => {\r\n    dispatch({type: USER_SIGNIN_REQUEST, payload: {email, password}});\r\n    try{\r\n        const {data} = await Axios.post(\"/api/users/signin\", {email, password});\r\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\r\n        Cookie.set('userInfo', JSON.stringify(data));\r\n    }\r\n    catch(error){\r\n        dispatch({type: USER_SIGNIN_FAIL, payload: error.message});\r\n    }\r\n}\r\n\r\nconst register = (name, email, password) => async (dispatch) => {\r\n  // console.log(\"here\");\r\n    dispatch({type: USER_REGISTER_REQUEST, payload: {name, email, password}});\r\n    try{\r\n        const {data} = await Axios.post(\"/api/users/register\", {name, email, password});\r\n        dispatch({type: USER_REGISTER_SUCCESS, payload: data});\r\n        Cookie.set('userInfo', JSON.stringify(data));\r\n        \r\n    }\r\n    catch(error){\r\n        dispatch({type: USER_REGISTER_FAIL, payload: error.message});\r\n    }\r\n}\r\n\r\nconst logout = () => (dispatch) => {\r\n    Cookie.remove(\"userInfo\");\r\n    dispatch({ type: USER_LOGOUT });\r\n}\r\n\r\nconst update = ({ userId, name, email, password }) => async (dispatch, getState) => {\r\n  \r\n  const { userSignin: { userInfo } } = getState();\r\n  // alert('Bearer ' + userInfo.token); \r\n    dispatch({ type: USER_UPDATE_REQUEST, payload: { userId, name, email, password } });\r\n    try {\r\n      const { data } = await Axios.put(\"/api/users/\" + userId,\r\n        { name, email, password }, {\r\n        headers: {\r\n          Authorization: 'Bearer ' + userInfo.token\r\n        }\r\n      });\r\n      dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\r\n      Cookie.set('userInfo', JSON.stringify(data));\r\n      \r\n    window.location.reload();\r\n    } catch (error) {\r\n      dispatch({ type: USER_UPDATE_FAIL, payload: error.message });\r\n      window.location.reload();\r\n    }\r\n  }\r\n\r\nexport {signin, register,logout,update}//, logout, update}"]},"metadata":{},"sourceType":"module"}